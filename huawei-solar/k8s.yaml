apiVersion: v1
kind: Namespace
metadata:
  name: pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-storage
  namespace: pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /volumes/pv-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: pv
  name: postgres-storage
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: manual
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: pv
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:12
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          value: secretpassword
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-storage
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-storage
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: pv
spec:
  ports:
  - port: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: pv
  name: influx-storage
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influx
  namespace: pv
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influx
  template:
    metadata:
      labels:
        app: influx
    spec:
      containers:
      - name: main
        image: influxdb:1.8.0
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 8086
        volumeMounts:
        - mountPath: /var/lib/influxdb
          name: influx-storage
      volumes:
      - name: influx-storage
        persistentVolumeClaim:
          claimName: influx-storage
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: pv
spec:
  ports:
  - port: 8086
  selector:
    app: influx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: huwei-solar
  namespace: pv
spec:
  replicas: 1
  selector:
    matchLabels:
      app: huwei-solar
  template:
    metadata:
      labels:
        app: huwei-solar
    spec:
      imagePullSecrets:
      - name: ghreg
      containers:
      - name: main
        #image: docker.pkg.github.com/szczeles/toolbelt/huawei-solar:0.21
        image: huawei-solar:0.21
        envFrom:
        - secretRef:
            name: huawei-solar-secret
        command:
        - sh
        - -c
        args:
        - 'python3 main.py --fusionsolar-user ${FUSIONSOLAR_USER} --fusionsolar-password ${FUSIONSOLAR_PASSWORD} --pvoutput-api-key ${PVOUTPUT_API_KEY} --pvoutput-system-id ${PVOUTPUT_SYSTEM_ID} --postgres-url postgres://postgres:secretpassword@postgres/postgres --influxdb-url http://influxdb:8086 --fusionsolar-region eu5'
        imagePullPolicy: "IfNotPresent"
